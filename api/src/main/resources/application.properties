
# quarkus.datasource.devservices.enabled=true
# quarkus.datasource.devservices.port=9999

%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=postgres
%dev.quarkus.datasource.password=changeme
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://db:5432/postgres
%dev.quarkus.datasource.jdbc.max-size=16
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${db-username:postgres}
quarkus.datasource.password=${db-password:changeme}
quarkus.datasource.jdbc.url=jdbc:postgresql://${db-server-name:db}:${db-server-port:5432}/${db-name:postgres}
quarkus.datasource.jdbc.max-size=16

# %dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.database.generation=none
%dev.quarkus.hibernate-orm.log.sql=true
# %dev.quarkus.hibernate-orm.log.bind-parameters=true

# %dev.quarkus.log.category."io.quarkus.oidc".level=DEBUG
# %dev.quarkus.hibernate-orm.sql-load-script=import-testdata.sql
%dev.quarkus.log.level=INFO
%dev.quarkus.log.min-level=TRACE

#更新SQLのバッチサイズ
quarkus.hibernate-orm.jdbc.statement-batch-size=100

# 開発モードの場合、起動時にスキーマを全入替する。
%dev.quarkus.flyway.migrate-at-start=true
%dev.quarkus.flyway.baseline-on-migrate=true
%dev.quarkus.flyway.clean-at-start=true
quarkus.flyway.locations=classpath:META-INF/db/migration
%dev.quarkus.flyway.locations=classpath:META-INF/db/migration,db/migration
#FIXME 制約を設ける場合はちゃんと設定する
quarkus.http.cors=true

#openid connect.
quarkus.oidc.client-id=${AUTH0_CLIENT_ID:noval}
quarkus.oidc.auth-server-url=${AUTH0_AUTH_SERVER_URL:noval}
quarkus.oidc.token.audience=${AUTH0_AUDIENCE:noval}
# quarkus.oidc.authentication.user-info-required=true //アカウント情報を取得すると、何度か実行していると401になる。いったん回避。

quarkus.application.version=latest
quarkus.container-image.group=minokuba
quarkus.container-image.name=4taku-api
