name: ci production

on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Build with Mavenw
        ## latestと、commit-hashのタグでdocker-hubにpush
        run: ./mvnw clean package -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.additional-tags=${{github.sha}}

  update-manifests:
    runs-on: ubuntu-18.04
    needs: build-and-push
    timeout-minutes: 300
    env:
      MANIFEST_REPOSITORY: direboar/4taku-manifest
    steps:
    # repository-dispatchを使って、マニフェストリポジトリに対して通知
    # その際に、Dockerイメージにタグつけしたコミットハッシュを合わせて送信
    - name: dispatch update-manifests-production
      uses: peter-evans/repository-dispatch@v1.1.3
      with:
        repository: ${{ env.MANIFEST_REPOSITORY }}
        token: ${{ secrets.YONTAKU_REPOSITORY_DISPATCH_TOKEN }}
        event-type: update-manifest-production
        client-payload: '{"sha": "${{ github.sha }}"}'

    - name: Discord Message Notify
      uses: appleboy/discord-action@0.0.3
      with:
        webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
        webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
        color: "#48f442"
        username: "GitHub Bot[4taku-api]"
        args: |
              productionブランチのビルドが完了しました。Production環境にデプロイするため、Manifestの更新を開始します。
              トリガーイベント:${{ github.event_name }} 
              コミット:https://github.com/direboar/4taku-api/commit/${{github.sha}}
