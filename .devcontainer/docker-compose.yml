version: '3'
services:
  quarkus:
    # Using a Dockerfile is optional, but included for completeness.
    build: 
      context: ..
      dockerfile: Dockerfile
    environment : 
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_AUTH_SERVER_URL=${AUTH0_AUTH_SERVER_URL}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - OICD_BATTLENET_TOKEN_PATH=${OICD_BATTLENET_TOKEN_PATH}
      - OICD_BATTLENET_CLIENT_ID=${OICD_BATTLENET_CLIENT_ID}
      - OICD_BATTLENET_SECRET=${OICD_BATTLENET_SECRET}
      
      # [Optional] You can use build args to set options. e.g. 'VARIANT' below affects the image in the Dockerfile
      # args: 
      #   VARIANT: buster
    volumes:
      # This is where VS Code should expect to find your project's source code and the value of "workspaceFolder" in .devcontainer/devcontainer.json
      - ..:/workspace:cached
      - /var/run/docker.sock:/var/run/docker.sock
      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock 

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"  

  db:
    container_name: postgres_container
    image: postgres:14.2
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    restart: unless-stopped

  #http://localhost:5050/browser/ pass:admin
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
